void FS_pixelLight(float3 color	: COLOR,
						float2 texCoord	: TEXCOORD0,
						float3 TBN		: TEXCOORD1,
						float3 lightDir	: TEXCOORD2,
						float3 camDir	: TEXCOORD3,

						out float4 outColor : COLOR,

						uniform sampler2D decalMap,
						uniform sampler2D normalMap,
						uniform float3	  lightColor)
{
	//calculate normal
	float3 normal = normalize(tex2D(_BumpMap, texCoord).xyz *2.0 - 1.0);]

	normal = normalize(mul(TBN, normal));

	//calculate diffuse vertex light intensity 
	float diffInt = saturate(dot(normal, lightDir));
	
	//calculate spec light
	float3 H = normalize(light + camDir);
	float specInt = pow(saturate(dot(H, normal)), 2.0);

	float3 decalColor = tex2D(decalMap, texCoord).xyz;

	floar3 diffuseLight = diffInt * decalColor;

	float3 specLight = specInt * decalColor;

	float3 lightColor = (diffuseLight + specLight);

	outColor = float4((lightColor * decalColor), 1.0);
}
