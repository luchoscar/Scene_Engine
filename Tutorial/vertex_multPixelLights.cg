
//vertext output
struct Vertex_Output
{
	float4 position  : POSITION;
	float4 color	 : COLOR;
	float3 vertPos	 : TEXCOORD0;
	float2 texCoord  : TEXCOORD1;
	float3x3 TBN	 : TEXCOORD2;
};

//vertex shader
Vertex_Output VS_multPixelLight(float4 position : POSITION,
							float3 normal	: NORMAL,
							float4 color	: COLOR,
							float2 texCoord : TEXCOORD0,
							
							uniform float3	 tangent,	
							uniform float3	 bitangent,
							uniform float4x4 matrixMVP)
{
	Vertex_Output OUT;

	float3 T = normalize(tangent);
	float3 B = normalize(bitangent);
	float3 N = normalize(normal);
	
	OUT.position = mul(matrixMVP, position);
	OUT.color = color;
	OUT.vertPos = position.xyz;
	OUT.texCoord = texCoord;
	OUT.TBN = transpose(float3x3(T, B, N));

	return OUT;
}
